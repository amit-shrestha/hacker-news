{"version":3,"sources":["utils/config.js","services/service.js","constants/constants.js","components/Comment.js","components/Story.js","utils/auth.js","components/Navbar.js","components/StoryWrapper.js","components/PrivateRoute.js","services/storage.js","components/Login.js","components/Router.js","components/App.js","serviceWorker.js","index.js"],"names":["http","axios","create","baseURL","process","getStoryIds","option","get","concat","then","response","data","catch","err","getItem","id","CONSTANTS","NO_OF_STORIES_PER_PAGE","PAGE_INDEX","STORY","COMMENT","NEW_STORIES","TOP_STORIES","BEST_STORIES","Comment","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","Promise","all","props","kids","map","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","item","wrap","_context","prev","next","sent","abrupt","stop","_x","apply","arguments","comments","setState","state","length","comment","react_default","createElement","className","key","deleted","dangerouslySetInnerHTML","__html","text","by","React","Component","Story","location","story","title","components_Comment","auth","isAuthenticated","authenticate","logout","cb","Navbar","onClick","history","push","NavLink","to","activeClassName","StoryWrapper","storyIds","storyIdsPerPage","slice","pageIndex","numberOfStoriesPerPage","fetchStories","handlePreviousClick","setStories","handleNextClick","stories","_ref2","_callee2","_context2","buttonEnable","_this2","url","href","Link","pathname","score","descendants","PrivateRoute","component","rest","objectWithoutProperties","Route","assign","render","Redirect","from","saveCredentials","credentials","window","localStorage","setItem","JSON","stringify","Login","login","username","password","forEach","credential","incorrectCredential","error","isIncorrectCredential","hasNoUser","isInvalidCredential","signup","usernameAlreadyExist","usernameExist","toConsumableArray","storeCredentials","loginCredentialsParsed","loginCredentialsUnparsed","parse","getCredentials","type","placeholder","value","onChange","event","target","Router","BrowserRouter","basename","path","Switch","exact","components_PrivateRoute","components_StoryWrapper","App","components_Router","Boolean","hostname","match","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4a24132.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const http = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL\n});\n","import { http } from '../utils/config';\n\n/**\n *\n * @param {String} option\n */\nexport const getStoryIds = option => {\n  return http\n    .get(`/${option}.json`)\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => err);\n};\n\n/**\n *\n * @param {Integer} id\n */\nexport const getItem = id => {\n  return http\n    .get(`/item/${id}.json`)\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => err);\n};\n","export const CONSTANTS = {\n  NO_OF_STORIES_PER_PAGE: 10,\n  PAGE_INDEX: 0,\n  STORY: 'STORY',\n  COMMENT: 'COMMENT',\n  NEW_STORIES: 'newstories',\n  TOP_STORIES: 'topstories',\n  BEST_STORIES: 'beststories'\n};\n","import React from 'react';\nimport Proptypes from 'prop-types';\n\nimport { getItem } from '../services/service';\nimport { CONSTANTS } from '../constants/constants';\n/**\n *\n *\n * @class Comment\n * @extends {React.Component}\n */\nclass Comment extends React.Component {\n  /**\n   * Creates an instance of Comment.\n   *\n   * @memberof Comment\n   */\n  constructor() {\n    super();\n    this.state = {\n      comments: []\n    };\n  }\n\n  /**\n   * Set comments in the state.\n   *\n   * @memberof Comment\n   */\n  componentDidMount = () => {\n    // eslint-disable-next-line\n    let comments = [];\n\n    Promise.all(\n      (comments = this.props.kids.map(async id => {\n        const item = await getItem(id);\n\n        return item;\n      }))\n    ).then(comments => this.setState({ comments }));\n  };\n\n  /**\n   *  Renders comments.\n   *\n   * @returns\n   * @memberof Comment\n   */\n  render() {\n    return this.state.comments && this.state.comments.length > 0\n      ? this.state.comments.map(comment => (\n          <div\n            className=\"parent-comment\"\n            key={`${CONSTANTS.COMMENT}-${comment.id}`}\n          >\n            {comment.deleted ? (\n              '*comment deleted*'\n            ) : (\n              <div className=\"comment\">\n                <div\n                  className=\"comment-text\"\n                  dangerouslySetInnerHTML={{ __html: comment.text }}\n                />\n                <div className=\"comment-by\">-{comment.by}</div>\n              </div>\n            )}\n\n            {comment.kids ? (\n              <div className=\"child-comment\">\n                <Comment kids={comment.kids} />\n              </div>\n            ) : null}\n          </div>\n        ))\n      : null;\n  }\n}\nComment.propTypes = {\n  kids: Proptypes.array.isRequired\n};\n\nexport default Comment;\n","import React from 'react';\nimport Proptypes from 'prop-types';\n\nimport Comment from './Comment';\n\n/**\n * Returns Story Content.\n *\n * @param {Object} props\n */\nconst Story = props => {\n  return (\n    <div className=\"story-div\">\n      <h2>{props.location.state.story.title}</h2>\n      {props.location.state.story.text ? (\n        <div\n          className=\"story-text\"\n          dangerouslySetInnerHTML={{\n            __html: props.location.state.story.text\n          }}\n        />\n      ) : null}\n      {props.location.state.story.kids &&\n      props.location.state.story.kids.length > 0 ? (\n        <Comment kids={props.location.state.story.kids} />\n      ) : null}\n    </div>\n  );\n};\n\nStory.propTypes = {\n  location: Proptypes.object\n};\n\nexport default Story;\n","export const auth = {\n  isAuthenticated: false,\n  /**\n   *\n   */\n  authenticate: () => {\n    auth.isAuthenticated = true;\n  },\n\n  logout: cb => {\n    auth.isAuthenticated = false;\n    cb();\n  }\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Proptypes from 'prop-types';\n\nimport { auth } from '../utils/auth';\n\nimport { CONSTANTS } from '../constants/constants';\n\n/**\n *\n * @param {*} props\n */\nconst Navbar = props => {\n  return (\n    <div className=\"nav-bar\">\n      <div className=\"header\">\n        <h1>Hacker News</h1>\n        {auth.isAuthenticated ? (\n          <span className=\"logout-btn\">\n            <button onClick={() => auth.logout(() => props.history.push('/'))}>\n              Log Out\n            </button>\n          </span>\n        ) : null}\n      </div>\n\n      <ul>\n        <li>\n          <NavLink to=\"/newstories\" activeClassName=\"active\">\n            New Stories\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to={`/${CONSTANTS.TOP_STORIES}`} activeClassName=\"active\">\n            Top Stories\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to={`/${CONSTANTS.BEST_STORIES}`} activeClassName=\"active\">\n            Best Stories\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nNavbar.propTypes = {\n  history: Proptypes.object\n};\n\nexport default Navbar;\n","import React from 'react';\nimport Proptypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { CONSTANTS } from '../constants/constants';\nimport { getStoryIds, getItem } from '../services/service';\n/**\n *\n *\n * @class StoryWrapper\n * @augments {React.Component}\n */\nclass StoryWrapper extends React.Component {\n  /**\n   * Creates an instance of StoryWrapper.\n   *\n   * @memberof StoryWrapper\n   */\n  constructor() {\n    super();\n    this.state = {\n      storyIds: [],\n      stories: [],\n      storyIdsPerPage: [],\n      buttonEnable: true,\n      pageIndex: CONSTANTS.PAGE_INDEX,\n      numberOfStoriesPerPage: CONSTANTS.NO_OF_STORIES_PER_PAGE\n    };\n  }\n\n  /**\n   * Get Story Ids, slice Ids to be displayed and call fetchStories().\n   *\n   * @memberof StoryWrapper\n   */\n  componentDidMount = async () => {\n    const storyIds = await getStoryIds(this.props.option);\n\n    this.setState({ storyIds }, () =>\n      this.setState(\n        {\n          storyIdsPerPage: this.state.storyIds.slice(\n            this.state.pageIndex,\n            this.state.numberOfStoriesPerPage\n          )\n        },\n        () => this.fetchStories()\n      )\n    );\n  };\n\n  handlePreviousClick = () => {\n    if (this.state.pageIndex !== 0) {\n      this.setState({ pageIndex: this.state.pageIndex - 1 }, () =>\n        this.setStories()\n      );\n    }\n  };\n\n  handleNextClick = () => {\n    if (!(this.state.pageIndex > this.state.storyIds.length)) {\n      this.setState({ pageIndex: this.state.pageIndex + 1 }, () =>\n        this.setStories()\n      );\n    }\n  };\n\n  setStories = () => {\n    this.setState(\n      {\n        stories: [],\n        storyIdsPerPage: this.state.storyIds.slice(\n          this.state.pageIndex * this.state.numberOfStoriesPerPage,\n          (this.state.pageIndex + 1) * this.state.numberOfStoriesPerPage\n        )\n      },\n      () => {\n        this.fetchStories();\n      }\n    );\n  };\n\n  fetchStories = () => {\n    // eslint-disable-next-line\n    let stories = [];\n\n    Promise.all(\n      (stories = this.state.storyIdsPerPage.map(async id => {\n        const item = await getItem(id);\n\n        return item;\n      }))\n    ).then(stories => this.setState({ stories }));\n  };\n\n  /**\n   * Renders list of Stories.\n   *\n   * @returns\n   * @memberof StoryWrapper\n   */\n  render() {\n    return (\n      <div className=\"stories\">\n        <div className=\"pagination\">\n          <button\n            className=\"previous\"\n            onClick={() => this.handlePreviousClick()}\n          >\n            Previous\n          </button>\n          <span>{this.state.pageIndex + 1}</span>\n          <button className=\"next\" onClick={() => this.handleNextClick()}>\n            Next\n          </button>\n        </div>\n        <ul>\n          {this.state.stories.map(story => (\n            <li key={`${CONSTANTS.STORY}-${story.id}`}>\n              <div className=\"story\">\n                <div className=\"title\">\n                  {story.url ? (\n                    <a href={story.url}>{story.title}</a>\n                  ) : (\n                    <Link\n                      to={{\n                        pathname: `/${story.id}`,\n                        state: { story }\n                      }}\n                    >\n                      {story.title}\n                    </Link>\n                  )}\n                </div>\n\n                <div className=\"info\">\n                  <span className=\"by\">-{story.by}</span>\n                  <span className=\"score\">Score: {story.score}</span>\n                  {story.descendants ? (\n                    <Link\n                      to={{\n                        pathname: `/${story.id}`,\n                        state: { story }\n                      }}\n                    >\n                      <span className=\"comments-count\">\n                        {story.descendants} Comments\n                      </span>\n                    </Link>\n                  ) : null}\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nStoryWrapper.propTypes = {\n  option: Proptypes.string.isRequired\n};\n\nexport default StoryWrapper;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { auth } from '../utils/auth';\n\n/**\n *\n * @param {*} param0\n */\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={{ pathname: '/', state: { from: props.location } }} />\n      )\n    }\n  />\n);\n\nexport default PrivateRoute;\n","/**\n * Get Login Credentials from Local Storage.\n */\nexport const getCredentials = () => {\n  const loginCredentialsUnparsed = window.localStorage.getItem(\n    'loginCredentials'\n  );\n  const loginCredentialsParsed = loginCredentialsUnparsed\n    ? JSON.parse(loginCredentialsUnparsed)\n    : [];\n\n  return loginCredentialsParsed;\n};\n\n/**\n * Save Login Credentials to Local Storage.\n *\n * @param {Array} credentials\n */\nexport const saveCredentials = credentials => {\n  window.localStorage.setItem('loginCredentials', JSON.stringify(credentials));\n};\n","import React from 'react';\nimport Proptypes from 'prop-types';\n\nimport { auth } from '../utils/auth';\nimport { getCredentials, saveCredentials } from '../services/storage';\n\n/**\n *\n *\n * @class Login\n * @augments {React.Component}\n */\nclass Login extends React.Component {\n  /**\n   * Creates an instance of Login.\n   *\n   * @memberof Login\n   */\n  constructor() {\n    super();\n    this.state = {\n      credentials: [],\n      username: '',\n      password: '',\n      error: false,\n      isIncorrectCredential: false,\n      hasNoUser: false,\n      isInvalidCredential: false,\n      usernameAlreadyExist: false\n    };\n    this.incorrectCredential = true;\n    this.usernameExist = false;\n  }\n\n  /**\n   * Login.\n   *\n   * @memberof Login\n   */\n  login = () => {\n    const { from } = this.props.location.state || {\n      from: { pathname: '/newstories' }\n    };\n\n    if (this.state.username && this.state.password) {\n      if (this.state.credentials.length > 0) {\n        this.state.credentials.forEach(credential => {\n          if (\n            credential.username === this.state.username &&\n            credential.password === this.state.password\n          ) {\n            auth.authenticate();\n            this.props.history.push(from);\n            this.incorrectCredential = false;\n          }\n        });\n        if (this.incorrectCredential) {\n          this.setState({ error: true, isIncorrectCredential: true });\n        }\n      } else {\n        this.setState({ error: true, hasNoUser: true });\n      }\n    } else {\n      this.setState({ error: true, isInvalidCredential: true });\n    }\n  };\n\n  /**\n   * Sign Up.\n   *\n   * @memberof Login\n   */\n  signup = () => {\n    if (this.state.credentials.length > 0) {\n      this.state.credentials.forEach(credential => {\n        if (credential.username === this.state.username) {\n          this.setState({ error: true, usernameAlreadyExist: true });\n          this.usernameExist = true;\n        }\n      });\n      if (!this.usernameExist) {\n        this.setState(\n          {\n            credentials: [\n              ...this.state.credentials,\n              { username: this.state.username, password: this.state.password }\n            ]\n          },\n          () => this.storeCredentials()\n        );\n      }\n    } else {\n      this.setState(\n        {\n          credentials: [\n            { username: this.state.username, password: this.state.password }\n          ]\n        },\n        () => this.storeCredentials()\n      );\n    }\n  };\n\n  /**\n   * Store Login Credentials.\n   *\n   * @memberof Login\n   */\n  storeCredentials = () => {\n    saveCredentials(this.state.credentials);\n    this.setState({ username: '', password: '' });\n  };\n\n  /**\n   * Get Login Credentials.\n   *\n   * @memberof Login\n   */\n  componentDidMount() {\n    const loginCredentialsParsed = getCredentials();\n\n    this.setState({ credentials: loginCredentialsParsed });\n  }\n\n  /**\n   * Renders Login Form.\n   *\n   * @returns\n   * @memberof Login\n   */\n  render() {\n    return (\n      <div className={this.state.error ? 'auth-form red' : 'auth-form'}>\n        <input\n          className=\"username-input\"\n          type=\"text\"\n          placeholder=\"Username\"\n          value={this.state.username}\n          onChange={event => this.setState({ username: event.target.value })}\n        />\n        <div\n          className={\n            this.state.usernameAlreadyExist ? 'display-error-msg' : 'error-msg'\n          }\n        >\n          Username Already Exists\n        </div>\n        <input\n          className=\"password-input\"\n          type=\"password\"\n          placeholder=\"Password\"\n          value={this.state.password}\n          onChange={event => this.setState({ password: event.target.value })}\n        />\n        <div\n          className={\n            this.state.isIncorrectCredential ? 'display-error-msg' : 'error-msg'\n          }\n        >\n          Incorrect Credentials\n        </div>\n        <div\n          className={this.state.hasNoUser ? 'display-error-msg' : 'error-msg'}\n        >\n          Please SignUp First\n        </div>\n        <div\n          className={\n            this.state.isInvalidCredential ? 'display-error-msg' : 'error-msg'\n          }\n        >\n          Please enter valid credentials\n        </div>\n        <button onClick={this.login}>Log in</button>\n        <button onClick={this.signup}>Sign Up</button>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  location: Proptypes.object,\n  history: Proptypes.object\n};\n\nexport default Login;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Story from './Story';\nimport Navbar from './Navbar';\nimport StoryWrapper from './StoryWrapper';\nimport { CONSTANTS } from '../constants/constants';\nimport PrivateRoute from './PrivateRoute';\nimport Login from './Login';\n\n/**\n * Returns Route paths.\n */\nconst Router = () => {\n  return (\n    <BrowserRouter basename=\"hacker-news\">\n      <div className=\"wrapper\">\n        <div className=\"container\">\n          <Route path=\"/\" component={Navbar} />\n\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <PrivateRoute\n              path={`/${CONSTANTS.NEW_STORIES}`}\n              component={props => (\n                <StoryWrapper {...props} option={CONSTANTS.NEW_STORIES} />\n              )}\n            />\n            <PrivateRoute\n              path={`/${CONSTANTS.TOP_STORIES}`}\n              component={props => (\n                <StoryWrapper {...props} option={CONSTANTS.TOP_STORIES} />\n              )}\n            />\n            <PrivateRoute\n              path={`/${CONSTANTS.BEST_STORIES}`}\n              component={props => (\n                <StoryWrapper {...props} option={CONSTANTS.BEST_STORIES} />\n              )}\n            />\n            <PrivateRoute path=\"/:story_id\" component={Story} />\n          </Switch>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import React from 'react';\n\nimport '../assets/css';\nimport Router from './Router';\n/**\n * Returns component Router.\n *\n */\nconst App = () => {\n  return <Router />;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}