{"version":3,"sources":["components/Navbar.js","utils/config.js","constants/url.js","constants/constants.js","components/Stories.js","components/DisplayComment.js","components/DisplayStory.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","NavLink","exact","to","activeClassName","instance","axios","create","baseURL","CONSTANTS","numberOfStoriesPerPage","pageIndex","Stories","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlePreviousClick","setStories","handleNextClick","state","storyIds","length","setState","stories","storyIdsPerPage","slice","fetchStories","map","id","get","concat","then","response","toConsumableArray","data","catch","err","buttonEnable","_this2","props","option","_this3","onClick","story","key","url","href","title","Link","pathname","by","score","descendants","React","Component","DisplayComment","componentDidMount","kids","forEach","comments","comment","deleted","dangerouslySetInnerHTML","__html","text","DisplayStory","location","components_DisplayComment","App","BrowserRouter","basename","components_Navbar","Switch","Route","path","component","components_Stories","assign","Boolean","window","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0f73c9c.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n/**\n *\n */\nconst Navbar = () => {\n  return (\n    <div className=\"nav-bar\">\n      <h1>Hacker News</h1>\n      <ul>\n        <li>\n          <NavLink exact to=\"/\" activeClassName=\"active\">\n            New Stories\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/topstories\" activeClassName=\"active\">\n            Top Stories\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/beststories\" activeClassName=\"active\">\n            Best Stories\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import axios from 'axios';\n\nimport { BASE_URL } from '../constants/url';\n\nexport const instance = axios.create({\n  baseURL: BASE_URL\n});\n","export const BASE_URL = 'https://hacker-news.firebaseio.com/v0';\n","export const CONSTANTS = {\n  numberOfStoriesPerPage: 10,\n  pageIndex: 0\n};\n","import React from 'react';\nimport Proptypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { instance } from '../utils/config';\nimport { CONSTANTS } from '../constants/constants';\n/**\n *\n */\nclass Stories extends React.Component {\n  /**\n   * Creates an instance of Stories.\n   *\n   * @memberof Stories\n   */\n  constructor() {\n    super();\n    this.pageIndex = CONSTANTS.pageIndex;\n    this.numberOfStoriesPerPage = CONSTANTS.numberOfStoriesPerPage;\n    this.state = {\n      storyIds: [],\n      stories: [],\n      storyIdsPerPage: [],\n      buttonEnable: true\n    };\n  }\n\n  /**\n   *\n   *\n   * @memberof Stories\n   */\n  componentDidMount() {\n    instance\n      .get(`/${this.props.option}.json`)\n      .then(response => {\n        this.setState(\n          {\n            storyIds: response.data\n          },\n          () =>\n            this.setState(\n              {\n                storyIdsPerPage: this.state.storyIds.slice(\n                  this.pageIndex,\n                  this.numberOfStoriesPerPage\n                )\n              },\n              () => this.fetchStories()\n            )\n        );\n      })\n      .catch(err => err);\n  }\n\n  handlePreviousClick = () => {\n    if (this.pageIndex !== 0) {\n      this.pageIndex = this.pageIndex - 1;\n      this.setStories();\n    }\n  };\n\n  handleNextClick = () => {\n    if (!(this.pageIndex > this.state.storyIds.length)) {\n      this.pageIndex = this.pageIndex + 1;\n      this.setStories();\n    }\n  };\n\n  setStories = () => {\n    this.setState(\n      {\n        stories: [],\n        storyIdsPerPage: this.state.storyIds.slice(\n          this.pageIndex * this.numberOfStoriesPerPage,\n          (this.pageIndex + 1) * this.numberOfStoriesPerPage\n        )\n      },\n      () => {\n        this.fetchStories();\n      }\n    );\n  };\n\n  fetchStories = () => {\n    this.state.storyIdsPerPage.map(id =>\n      instance\n        .get(`/item/${id}.json`)\n        .then(response =>\n          this.setState({ stories: [...this.state.stories, response.data] })\n        )\n        .catch(err => err)\n    );\n  };\n\n  /**\n   *\n   *\n   * @returns\n   * @memberof Stories\n   */\n  render() {\n    return (\n      <div className=\"stories\">\n        <div className=\"pagination\">\n          <button\n            className=\"previous\"\n            onClick={() => this.handlePreviousClick()}\n          >\n            Previous\n          </button>\n          <span>{this.pageIndex + 1}</span>\n          <button className=\"next\" onClick={() => this.handleNextClick()}>\n            Next\n          </button>\n        </div>\n        <ul>\n          {this.state.stories.map(story => (\n            <li key={story.id}>\n              <div className=\"story\">\n                <div className=\"title\">\n                  {story.url ? (\n                    <a href={story.url}>{story.title}</a>\n                  ) : (\n                    <Link\n                      to={{\n                        pathname: `/${story.id}`,\n                        state: { story: story }\n                      }}\n                    >\n                      {story.title}\n                    </Link>\n                  )}\n                </div>\n\n                <div className=\"info\">\n                  <span className=\"by\">-{story.by}</span>\n                  <span className=\"score\">Score: {story.score}</span>\n                  {story.descendants ? (\n                    <Link\n                      to={{\n                        pathname: `/${story.id}`,\n                        state: { story: story }\n                      }}\n                    >\n                      <span className=\"comments-count\">\n                        {story.descendants} Comments\n                      </span>\n                    </Link>\n                  ) : null}\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nStories.propTypes = {\n  option: Proptypes.string.isRequired\n};\n\nexport default Stories;\n","import React from 'react';\nimport Proptypes from 'prop-types';\n\nimport { instance } from '../utils/config';\n\n/**\n *\n *\n * @class DisplayComment\n * @extends {React.Component}\n */\nclass DisplayComment extends React.Component {\n  /**\n   * Creates an instance of DisplayComment.\n   *\n   * @param {*} props\n   * @memberof DisplayComment\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: [],\n      kids: props.kids\n    };\n  }\n\n  /**\n   *\n   *\n   * @memberof DisplayComment\n   */\n  componentDidMount = () => {\n    this.state.kids.forEach(id => {\n      instance\n        .get(`/item/${id}.json`)\n        .then(response =>\n          this.setState({ comments: [...this.state.comments, response.data] })\n        )\n        .catch(err => err);\n    });\n  };\n\n  /**\n   *\n   *\n   * @returns\n   * @memberof DisplayComment\n   */\n  render() {\n    return this.state.comments && this.state.comments.length > 0\n      ? this.state.comments.map(comment => (\n          <div className=\"parent-comment\" key={comment.id}>\n            {comment.deleted ? (\n              '*comment deleted*'\n            ) : (\n              <div className=\"comment\">\n                <div\n                  className=\"comment-text\"\n                  dangerouslySetInnerHTML={{ __html: comment.text }}\n                />\n                <div className=\"comment-by\">-{comment.by}</div>\n              </div>\n            )}\n\n            {comment.kids ? (\n              <div className=\"child-comment\">\n                <DisplayComment kids={comment.kids} />\n              </div>\n            ) : null}\n          </div>\n        ))\n      : null;\n  }\n}\nDisplayComment.propTypes = {\n  kids: Proptypes.array.isRequired\n};\n\nexport default DisplayComment;\n","import React from 'react';\nimport Proptypes from 'prop-types';\n\nimport DisplayComment from './DisplayComment';\n\n/**\n *\n *\n * @class DisplayStory\n * @extends {React.Component}\n */\nclass DisplayStory extends React.Component {\n  /**\n   * Creates an instance of DisplayStory.\n   *\n   * @memberof DisplayStory\n   */\n  constructor() {\n    super();\n    this.state = {\n      story: []\n    };\n  }\n\n  /**\n   *\n   *\n   * @memberof DisplayStory\n   */\n  componentDidMount() {\n    this.setState({\n      story: this.props.location.state.story\n    });\n  }\n  /**\n   *\n   *\n   * @returns\n   * @memberof DisplayStory\n   */\n  render() {\n    return (\n      <div className=\"story-div\">\n        <h2>{this.state.story.title}</h2>\n        {this.state.story.text ? (\n          <div\n            className=\"story-text\"\n            dangerouslySetInnerHTML={{ __html: this.state.story.text }}\n          />\n        ) : null}\n        {this.state.story.kids && this.state.story.kids.length > 0 ? (\n          <DisplayComment kids={this.state.story.kids} />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nDisplayStory.propTypes = {\n  location: Proptypes.object\n};\n\nexport default DisplayStory;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport '../assets/css';\nimport Navbar from './Navbar';\nimport Stories from './Stories';\nimport DisplayStory from './DisplayStory';\n\n/**\n *\n *\n * @class App\n * @extends {Component}\n */\nclass App extends Component {\n  /**\n   *\n   */\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  /**\n   *\n   *\n   * @returns\n   * @memberof App\n   */\n  render() {\n    return (\n      <Router basename=\"/hackernews\">\n        <div className=\"wrapper\">\n          <div className=\"container\">\n            <Navbar />\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                component={props => <Stories {...props} option=\"newstories\" />}\n              />\n              <Route\n                path=\"/topstories\"\n                component={props => <Stories {...props} option=\"topstories\" />}\n              />\n              <Route\n                path=\"/beststories\"\n                component={props => <Stories {...props} option=\"beststories\" />}\n              />\n              <Route path=\"/:story_id\" component={DisplayStory} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}